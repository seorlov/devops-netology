Домашнее задание к занятию "3.1. Работа в терминале, лекция 1"

5. По-умолчанию выделен 1Гб оперативки и 2 процессора со 100% нагрузкой

6. ОЗУ и ЦП можно задать в конфигурационном файле Vagrantfile, добавив туда строчки:
	config.vm.provider "virtualbox" do |v|
	  v.memory = 2048
	  v.cpus = 4
	 end

8.1. HISTCMD. В строках 534, 535
8.2. Если переменной HISTCONTROL присвоить значение ignoreboth, то в историю не будет записываться команда, которая начинается с пробела, либо команда, которая дублирует предыдущую.

9. Фигурные скобки применимы в сценариях, где необходимо выполнить подстановку. В фигурных скобках пишется список того, что будет подставляться в команду. Описано с 206 по 209 строки.

10. Можно создать 100 тыс. файлов командой: touch file{1..100000}
Аналогичным способом создать 300 тыс. файлов не получится, т.к. мы превысим максимальную длину коммандной строки, которую можно посмотреть в константе ARG_MAX, вызвав команду: getconf ARG_MAX

11. [[ -d /tmp ]] - это аналог команды test -d /tmp, проверяет, существует ли директория tmp

12. Порядок команд такой: 
 - Сначала создаём директорию: mkdir /tmp/new_path_directory
 - Затем переходим туда: cd tmp/new_path_directory
 - Копируем туда файл bash: cp /bin/bash bash
 - Добавляем путь в переменную $PATH: PATH=/tmp/new_path_directory:$PATH
 - Экспортируем переменную: export PATH
 - Выводим: type -a bash
vagrant@vagrant:~$ type -a bash
bash is tmp/new_path_directory/bash
bash is /usr/bin/bash
bash is /bin/bash

13. Команда batch работает аналогично команде at, но с тремя существенными отличиями:

Можно использовать команду batch только в интерактивном режиме.
Вместо того, чтобы планировать выполнение заданий в определенное время, можно добавлять их в очередь. Команда batch выполняет их, когда системный средняя нагрузка меньше 1,5.
Из-за вышеизложенного в batch никогда не указывается дата и время.

